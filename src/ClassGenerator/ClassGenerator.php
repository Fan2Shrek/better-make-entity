<?php

namespace Fan2Shrek\BetterMaker\ClassGenerator;

use Nette\PhpGenerator\ClassType;
use Nette\PhpGenerator\Printer;
use Fan2Shrek\BetterMaker\Schema\EntityDefinition;
use Nette\PhpGenerator\PhpNamespace;
use Nette\PhpGenerator\PhpFile;
use Fan2Shrek\BetterMaker\Schema\FieldDefinition;

class ClassGenerator implements ClassGeneratorInterface
{
    private const NAMESPACE = 'App\Entity';

    public function __construct(private Printer $printer)
    {
    }

    public function generate(EntityDefinition $entity): string
    {
        $file = new PhpFile();

        $namespace = $file->addNamespace(static::NAMESPACE);
        $class = $namespace->addClass($entity->getName());

        $class->setFinal();

        $class->addComment('This entity class was auto-generated by Fan2Shrek Better Maker.');

        foreach ($entity->getFields() as $field) {
            $property = $class->addProperty($field->getName());
            $property->setVisibility('private');
            $property->setType($field->getType());

            $this->doMethod($class, $field);
        }

        return $this->printer->printFile($file);
    }

    private function doMethod(ClassType $class, FieldDefinition $field): void
    {
        $method = $class->addMethod('get' . ucfirst($field->getName()));
        $method->setReturnType($field->getType());

        $method->addBody(\sprintf('return $this->%s;', $field->getName()));

        if ('id' === $field->getName()) {
            return;
        }

        $method = $class->addMethod('set' . ucfirst($field->getName()));
        $method->setReturnType('static');
        $method->addParameter($field->getName())->setType($field->getType());

        $method->addBody('$this->' . $field->getName() . ' = $' . $field->getName() . ';');
        $method->addBody('');
        $method->addBody('return $this;');
    }
}
